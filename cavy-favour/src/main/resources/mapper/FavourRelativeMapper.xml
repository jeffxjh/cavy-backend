<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jh.cavy.favour.mapper.FavourRelativeMapper">

    <resultMap id="BaseResultMap" type="com.jh.cavy.favour.domain.FavourRelative">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="realName" column="real_name" jdbcType="VARCHAR"/>
            <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
            <result property="relateType" column="relate_type" jdbcType="INTEGER"/>
            <result property="userId" column="user_id" jdbcType="INTEGER"/>
            <result property="relateUserId" column="relate_user_id" jdbcType="INTEGER"/>
            <result property="addTime" column="add_time" jdbcType="TIMESTAMP"/>
            <result property="addUser" column="add_user" jdbcType="VARCHAR"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="updateUser" column="update_user" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,real_name,nick_name,relate_type,
        user_id,relate_user_id,add_time,
        add_user,update_time,update_user
    </sql>
    <select id="listRelative" resultType="com.jh.cavy.favour.vo.FavourRelativeVO">
        select b.id, b.real_name, b.nick_name, b.relate_type, b.user_id, b.relate_user_id, b.add_time, b.add_user,
        b.update_time, b.update_user,
        d.label relate_type_name,
        c.real_name relate_user_name
        from t_bus_favour_relative b
        left join t_sys_user c on b.relate_user_id=c.id
        left join t_sys_dict_item d on d.item=b.relate_type
        <where>
            dic_id='18'
            <if test="ew != null">
                <if test="ew.nonEmptyOfWhere">
                    AND
                </if>
                ${ew.sqlSegment}
            </if>
        </where>

    </select>

    <select id="listRecord" resultType="com.jh.cavy.favour.vo.FavourRecordVO">
        SELECT
        a.id,
        a.current_user_id,
        a.relate_user_id,
        a.trade_type,
        a.buss_type,
        a.amt,
        a.add_time,
        a.add_user,
        a.update_time,
        a.update_user,
        b.real_name AS relate_user_name,
        c.real_name AS current_user_name,
        d.label AS buss_type_name,
        e.label AS trade_type_name,
        f.label AS relate_type_name
        FROM
        t_bus_favour_record a
        LEFT JOIN t_bus_favour_relative b ON b.id = a.relate_user_id AND b.user_id = a.current_user_id
        LEFT JOIN t_sys_user c ON a.current_user_id = c.id
        LEFT JOIN t_sys_dict_item d ON d.item = a.buss_type AND d.dic_id = '17'
        LEFT JOIN t_sys_dict_item e ON e.item = a.trade_type AND e.dic_id = '16'
        LEFT JOIN t_sys_dict_item f ON f.item = b.relate_type AND f.dic_id = '18'
        <if test="true">
            ${ew.customSqlSegment}
        </if>
    </select>
    <select id="getRelate" resultType="com.jh.cavy.favour.vo.FavourRelativeVO">
        SELECT b.id,
               b.real_name,
               b.nick_name,
               b.relate_type,
               b.user_id,
               b.relate_user_id,
               b.add_time,
               b.add_user,
               b.update_time,
               b.update_user,
               d.label     AS relate_type_name,
               c.real_name AS relate_user_name
        FROM t_bus_favour_relative b
                 LEFT JOIN
             t_sys_user c ON b.relate_user_id = c.id
                 LEFT JOIN
             t_sys_dict_item d ON d.item = b.relate_type AND d.dic_id = '18'
        WHERE b.id = #{id};
    </select>
</mapper>
