<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.jh</groupId>
        <artifactId>cavy-backend</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <artifactId>cavy-boot</artifactId>


    <packaging>jar</packaging>


    <dependencies>
        <dependency>
            <groupId>com.jh</groupId>
            <artifactId>cavy-manage</artifactId>
            <version>${modle.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jh</groupId>
            <artifactId>cavy-task</artifactId>
            <version>${modle.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jh</groupId>
            <artifactId>cavy-file</artifactId>
            <version>${modle.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jh</groupId>
            <artifactId>cavy-message</artifactId>
            <version>${modle.version}</version>
        </dependency>

        <dependency>
            <groupId>com.jh</groupId>
            <artifactId>cavy-cache</artifactId>
            <version>${modle.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jh</groupId>
            <artifactId>cavy-common</artifactId>
            <version>${modle.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jh</groupId>
            <artifactId>cavy-jwt</artifactId>
            <version>${modle.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jh</groupId>
            <artifactId>cavy-gateway</artifactId>
            <version>${modle.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jh</groupId>
            <artifactId>cavy-search</artifactId>
            <version>${modle.version}</version>
        </dependency>
    </dependencies>


    <build>
        <finalName>cavy-boot</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.3.7.RELEASE</version>
                <configuration>
                    <mainClass>com.jh.cavy.boot.CavyBootApplication</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.shared</groupId>
                        <artifactId>maven-filtering</artifactId>
                        <version>1.3</version>
                    </dependency>
                </dependencies>
            </plugin>


            <!-- Docker maven plugin -->
<!--            <plugin>-->
<!--                <groupId>com.spotify</groupId>-->
<!--                <artifactId>docker-maven-plugin</artifactId>-->
<!--                <version>1.1.1</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>build-image</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>build</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash; 镜像名称 &ndash;&gt;-->
<!--                    <imageName>${project.artifactId}</imageName>-->
<!--                    &lt;!&ndash; 指定标签 &ndash;&gt;-->
<!--                    <imageTags>-->
<!--                        <imageTag>latest</imageTag>-->
<!--                    </imageTags>-->
<!--                    &lt;!&ndash; 基础镜像&ndash;&gt;-->
<!--                    <baseImage>openjdk:8-jdk-alpine</baseImage>-->

<!--                    &lt;!&ndash; 切换到容器工作目录&ndash;&gt;-->
<!--                    <workdir>/ROOT</workdir>-->

<!--                    <entryPoint>["java","-jar","${project.build.finalName}.jar"]</entryPoint>-->

<!--                    &lt;!&ndash; 指定远程 Docker API地址  &ndash;&gt;-->
<!--                    <dockerHost>http://localhost:2375</dockerHost>-->

<!--                    &lt;!&ndash; 复制 jar包到docker容器指定目录&ndash;&gt;-->
<!--                    <resources>-->
<!--                        <resource>-->
<!--                            <targetPath>/ROOT</targetPath>-->
<!--                            &lt;!&ndash; 用于指定需要复制的根目录，${project.build.directory}表示target目录 &ndash;&gt;-->
<!--                            <directory>${project.build.directory}</directory>-->
<!--                            &lt;!&ndash; 用于指定需要复制的文件，${project.build.finalName}.jar就是打包后的target目录下的jar包名称　&ndash;&gt;-->
<!--                            <include>${project.build.finalName}.jar</include>-->
<!--                        </resource>-->
<!--                    </resources>-->
<!--                </configuration>-->
<!--            </plugin>-->
            <!-- Docker maven plugin -->


        </plugins>
    </build>
</project>
